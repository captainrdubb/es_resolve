use crate::types::Extensions;

/// Generated by:
/// node --experimental-wasi-unstable-preview1 -p "JSON.stringify([...require('module').builtinModules].sort())"
pub static NODE_CORE_MODULES: &[&str] = &[
    "_http_agent",
    "_http_client",
    "_http_common",
    "_http_incoming",
    "_http_outgoing",
    "_http_server",
    "_stream_duplex",
    "_stream_passthrough",
    "_stream_readable",
    "_stream_transform",
    "_stream_wrap",
    "_stream_writable",
    "_tls_common",
    "_tls_wrap",
    "assert",
    "assert/strict",
    "async_hooks",
    "buffer",
    "child_process",
    "cluster",
    "console",
    "constants",
    "crypto",
    "dgram",
    "diagnostics_channel",
    "dns",
    "dns/promises",
    "domain",
    "events",
    "fs",
    "fs/promises",
    "http",
    "http2",
    "https",
    "inspector",
    "module",
    "net",
    "os",
    "path",
    "path/posix",
    "path/win32",
    "perf_hooks",
    "process",
    "punycode",
    "querystring",
    "readline",
    "readline/promises",
    "repl",
    "stream",
    "stream/consumers",
    "stream/promises",
    "stream/web",
    "string_decoder",
    "sys",
    "timers",
    "timers/promises",
    "tls",
    "trace_events",
    "tty",
    "url",
    "util",
    "util/types",
    "v8",
    "vm",
    "wasi",
    "worker_threads",
    "zlib",
];

pub static DEFAULT_EXTENSIONS: &[Extensions] = &[
    Extensions::Tsx,
    Extensions::Ts,
    Extensions::Jsx,
    Extensions::Js,
    Extensions::Css,
    Extensions::Json,
];

pub static REWRITTEN_EXTENSIONS: &[(Extensions, &[Extensions])] = &[
    (Extensions::Js, &[Extensions::Ts, Extensions::Tsx]),
    (Extensions::Jsx, &[Extensions::Ts, Extensions::Tsx]),
    (Extensions::Mjs, &[Extensions::Mts]),
    (Extensions::Cts, &[Extensions::Cts]),
];

pub static PACKAGE_JSON: &str = "package.json";

pub static NODE_MODULES: &str = "node_modules";

pub static TSCONFIG_NAMES: &[&str] = &[
    "tsconfig.json",
    "jsconfig.json"
];
